name: AIS.Invictus.Installation.Framework.CI.$(rev:.r)

trigger: none
pr: none


parameters:
- name: Version
  displayName: Invictus Version
  type: string
  default: '*'
- name: useBeta
  displayName: Use Beta
  type: string
  default: $False

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Package
  displayName: Package
  dependsOn: []
  variables:
  - template: ../../../variables/invictus-shared.yml
  - template: ../../../variables/invictus-dev.yml # Installation secrets for pulling sources (SAS) in DEV
  jobs:
  - job: publish
    displayName: Build and Publish Framework
    steps:
    - checkout: self
      clean: true
      persistCredentials: true

    - task: AzureCLI@2
      displayName: 'Retrieve KeyVault Secret: SAS token'
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)
      inputs:
        azureSubscription: ${{ variables.serviceConnectionName }}
        scriptType: 'pscore'
        scriptLocation: 'scriptPath'
        scriptPath: '$(Build.SourcesDirectory)/invictus/azuredevops/scripts/SetPipelineVariableFromKeyvaultSecret.ps1'        
        ScriptArguments: >
          -keyVaultName "$(Invictus.Installation.KeyVault.Name)"
          -secretName "$(Invictus.Installation.Framework.SasToken.SecretName)"
          -pipelineVariableName "frameworkSasToken"

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Scripts'
      inputs:
        TargetPath: '$(Build.SourcesDirectory)/invictus/azuredevops/scripts'
        ArtifactName: 'scripts'
        
    - task: PowerShell@2
      displayName: 'Pull Sources'
      inputs:
        targetType: filePath
        filePath: '$(Build.SourcesDirectory)/invictus/azuredevops/scripts/Invictus-GetSources.ps1'
        arguments: '-StorageAccountName "$(Invictus.Installation.StorageAccount.Name)" -StorageSasToken "$(frameworkSasToken)" -StorageContainerName "framework" -SaveLocation "$(Build.ArtifactStagingDirectory)" -UseBeta ${{parameters.useBeta}} -Version ${{ parameters.Version }}'
              
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Framework artifacts'
      inputs:
        TargetPath: $(Build.ArtifactStagingDirectory)
        ArtifactName: 'framework'
        publishLocation: 'pipeline'